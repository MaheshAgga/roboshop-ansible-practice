- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable and enable nodejs:18
    ansible.builtin.shell: dnf module disable nodejs -y;dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present
    
  - name: add the user
    ansible.builtin.user:
      name: roboshop

  - name: create a directory
    ansible.builtin.file:
      path : /app
      state: directory

  - name: download app
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: npm install
    ansible.builtin.command: npm install
    args: 
      chdir: /app

  - name: copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: daemon-reload 
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: mongodb.repo copy
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: mongodb-org-shell client install
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: chceking the count
    ansible.builtin.command: mongo --host mongodb.roboshopin.site --quiet --eval 'db = db.getSiblingDB("users");db.products.count()'
    register: product_count

  - name: print value
    ansible.builtin.debug:
      msg: "product count: {{product_count}}"
    when: product_count.stdout_lines == 0
    
  - name: load user data
    ansible.builtin.command: mongo --host mongodb.roboshopin.site < /app/schema/user.js
    

 
    
