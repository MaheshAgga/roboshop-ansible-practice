- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: enable and disable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y;dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: add user
    ansible.builtin.user:
      name : roboshop

  - name: remove directory if alredy exists
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create a directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download a app
    ansible.builtin.get_url:
      url : https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install npm
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy catalogue service module
    ansible.builtin.copy:
       src: catalogue.service
       dest: /etc/systemd/system/catalogue.service

  - name: daemon reload
    ansible.builtin.systemd_service:
       daemon-reload: true

  - name: copy mongodb.repo 
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: install mongodb client package
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the catagories product count
    ansible.builtin.command: mongo --host mongodb.roboshopin.site --quiet --eval 'db = db.getSiblingDB("catalogue");db.products.count()'
    register: product_count

  - name: print the count
    ansible.builtin.debug:
      msg: "count is {{product_count}}"

  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.roboshopin.site < /app/schema/catalogue.js
    when: product_count.stdout_lines == "0"

  - name: start and enable service
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes
